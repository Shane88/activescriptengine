<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
namespace ActiveXScriptLib.Extensions
{
   using System;

   public static class FunctionOverriderExtensions
   {
      public static void OverrideGlobalFunction(this ActiveScriptEngine engine, string functionName, Action<object[]> action)
      {
         var overrider = new FunctionOverrider();
         overrider.WhenCalled(action);
         engine.AddObject(functionName, overrider);
      }

      public static void OverrideGlobalFunction(this ActiveScriptEngine engine, string functionName, Func<object[], object> func)
      {
         var overrider = new FunctionOverrider();
         overrider.WhenCalled(func);
         engine.AddObject(functionName, overrider);
      }

      <# 

      for (int i = 1; i <= 10; i++)
      {
         string methodSigPrefix = "public static void OverrideGlobalFunction<";
         string methodSigMiddle = "(this ActiveScriptEngine engine, string functionName, Func<";
         string methodSigSuffix = @", object> func) 
      {";

         string methodBodyPrefix = 
      @"   var overrider = new FunctionOverrider();
         overrider.WhenCalled(func);
         engine.AddObject(functionName, overrider);";


         string methodBodyMiddle = "";
         string methodBodySuffix = @"
      }" + Environment.NewLine;
         
         for (int y = 1; y <= i; y++)
         {
            methodSigPrefix += "TParam" + y.ToString();
            methodSigMiddle += "TParam" + y.ToString();

            if (y < i)
            {
               methodSigPrefix += ", ";
               methodSigMiddle += ", ";
            }
         }
         
         methodSigPrefix += ">";
         
   #>
   <#=methodSigPrefix + methodSigMiddle + methodSigSuffix #>
      <#= methodBodyPrefix + methodBodyMiddle + methodBodySuffix #>
   <#
      }

      #>

            <# 

      for (int i = 1; i <= 10; i++)
      {
         string methodSigPrefix = "public static void OverrideGlobalFunction<";
         string methodSigMiddle = "(this ActiveScriptEngine engine, string functionName, Action<";
         string methodSigSuffix = @"> action) 
      {";

         string methodBodyPrefix = 
      @"   var overrider = new FunctionOverrider();
         overrider.WhenCalled(action);
         engine.AddObject(functionName, overrider);";


         string methodBodyMiddle = "";
         string methodBodySuffix = @"
      }" + Environment.NewLine;
         
         for (int y = 1; y <= i; y++)
         {
            methodSigPrefix += "TParam" + y.ToString();
            methodSigMiddle += "TParam" + y.ToString();

            if (y < i)
            {
               methodSigPrefix += ", ";
               methodSigMiddle += ", ";
            }
         }
         
         methodSigPrefix += ">";
         
   #>
   <#=methodSigPrefix + methodSigMiddle + methodSigSuffix #>
      <#= methodBodyPrefix + methodBodyMiddle + methodBodySuffix #>
   <#
      }

      #>
   }
}
